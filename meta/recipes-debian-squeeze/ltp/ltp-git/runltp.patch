--- a/runltp	2011-06-27 11:39:06.000000000 +0900
+++ b/runltp	2011-06-27 11:43:23.000000000 +0900
@@ -65,11 +65,6 @@
 #		Aug 17 2009 - Modified - Subrata Modak
 #		- Added Fault Injection generation Capability through -F Option
 #
-# Debian changes:
-#
-#              May 12 2004 - Modified Alastair McKinstry
-#              - changed directory, file locations for ltp package
-#
 #################################################################################
 
 
@@ -81,9 +76,7 @@
         echo "FATAL: unable to change directory to $(dirname $0)"
         exit 1
     }
-    export LTPROOT=/usr/lib/ltp
-    export LTPTOOLS=/usr/lib/ltp/tools
-    export RESULTSDIR=/var/cache/ltp/results
+    export LTPROOT=${PWD}
     export TMPBASE="/tmp"
     export PATH="${PATH}:${LTPROOT}/testcases/bin"
 
@@ -94,7 +87,7 @@
         exit 1
     }
 
-    [ -e $LTPTOOLS/ltp-pan ] ||
+    [ -e "$LTPROOT/bin/ltp-pan" ] ||
     {
         echo "FATAL: Test suite driver 'ltp-pan' not found"
         echo "INFO: as root user type 'make ; make install'"
@@ -104,7 +97,7 @@
 
 version_of_ltp()
 {
-    zcat /usr/share/doc/ltp-tools/changelog.gz | head -n 1
+    cat "$LTPROOT/Version"
     exit 0
 }
 
@@ -209,8 +202,8 @@
     local SCENFILES=""
     local TAG_RESTRICT_STRING=""
     local PAN_COMMAND=""
-    version_date=`zcat /usr/share/doc/ltp-tools/changelog.gz | head -n 1 `
     local DEFAULT_FILE_NAME_GENERATION_TIME=`date +"%Y_%b_%d-%Hh_%Mm_%Ss"`
+    version_date=$(cat "$LTPROOT/Version")
 
     while getopts a:c:C:d:D:f:F:ehi:g:l:m:M:Nno:pqr:s:S:t:T:w:x:b:B: arg
     do  case $arg in
@@ -231,7 +224,7 @@
             /*)
                 FAILCMDFILE="-C $OPTARG" ;;
             *)    
-                FAILCMDFILE="-C $RESULTSDIR/$OPTARG"
+                FAILCMDFILE="-C $LTPROOT/output/$OPTARG"
                 ALT_DIR_OUT=1 ;;
             esac ;;
                    
@@ -299,7 +292,7 @@
             /*)
                 HTMLFILE="$OPTARG";;
             *)
-                HTMLFILE="$RESULTSDIR/$OPTARG";;
+                HTMLFILE="$LTPROOT/output/$OPTARG";;
             esac
             ALT_DIR_OUT=1 
             ALT_HTML_OUT=1;;
@@ -321,7 +314,7 @@
             /*)
                 LOGFILE="-l $OPTARG" ;;
             *)    
-                LOGFILE="-l $RESULTSDIR/$OPTARG"
+                LOGFILE="-l $LTPROOT/results/$OPTARG"
                 ALT_DIR_RES=1 ;;
             esac ;;
     
@@ -376,7 +369,7 @@
             /*)
                 OUTPUTFILE="-o $OPTARG";;
             *)
-                OUTPUTFILE="-o $RESULTSDIR/$OPTARG"
+                OUTPUTFILE="-o $LTPROOT/output/$OPTARG"
                 ALT_DIR_OUT=1 ;;
             esac ;;
     
@@ -434,15 +427,15 @@
          ALT_DIR_OUT=1
          if [ ! "$OUTPUTFILE" ]; then		             ## User has not mentioned about Output File name either
             if [ ! "$LOGFILE" ]; then                        ## User has not mentioned about Log File name either
-               FAILCMDFILE="-C $RESULTSDIR/LTP_RUN_ON-$FAILED_FILE_NAME.failed"
                FAILED_FILE_NAME=$DEFAULT_FILE_NAME_GENERATION_TIME
+               FAILCMDFILE="-C $LTPROOT/output/LTP_RUN_ON-$FAILED_FILE_NAME.failed"
             else					     ## User Fortunately wanted a log file,
-               FAILED_FILE_NAME=`basename ${LOGFILE_NAME}`     ## Extract log file name and use it to construct Failed file name
-               FAILCMDFILE="-C $RESULTSDIR/LTP_RUN_ON-$FAILED_FILE_NAME.failed"
+               FAILED_FILE_NAME=`basename $LOGFILE_NAME`     ## Extract log file name and use it to construct Failed file name
+               FAILCMDFILE="-C $LTPROOT/output/LTP_RUN_ON-$FAILED_FILE_NAME.failed"
             fi
          else                                                ## User Fortunately wanted a Output file
                FAILED_FILE_NAME=`basename $OUTPUTFILE_NAME`  ## Extract output file name and use it to construct Failed file name
-               FAILCMDFILE="-C $RESULTSDIR/LTP_RUN_ON-$FAILED_FILE_NAME.failed"
+               FAILCMDFILE="-C $LTPROOT/output/LTP_RUN_ON-$FAILED_FILE_NAME.failed"
          fi
     fi
 
@@ -450,12 +443,12 @@
        QUIET_MODE=""                                         ## Suppressing this guy as it will prevent generation of proper output
                                                              ## which the HTML parser will require
        if [ ! "$OUTPUTFILE" ]; then                          ## User has not mentioned about the Outputfile name, then we need to definitely generate one
-          OUTPUTFILE="-o $RESULTSDIR/LTP_RUN_ON-$OUTPUTFILE_NAME.output"
           OUTPUTFILE_NAME=$DEFAULT_FILE_NAME_GENERATION_TIME
+          OUTPUTFILE="-o $LTPROOT/output/LTP_RUN_ON-$OUTPUTFILE_NAME.output"
           ALT_DIR_OUT=1
           if [ ! "$HTMLFILE" ] ; then                        ## User has not mentioned HTML File name, We need to create one
              HTMLFILE_NAME=`basename $OUTPUTFILE_NAME`
-             HTMLFILE="$RESULTSDIR/$HTMLFILE_NAME.html"
+             HTMLFILE="$LTPROOT/output/$HTMLFILE_NAME.html"
           fi
        fi
     fi
@@ -463,12 +456,12 @@
     # If we need, create the output directory
     [ "$ALT_DIR_OUT" -eq 1 ] && \
     {
-        echo "INFO: creating $RESULTSDIR directory"
-        [ ! -d $RESULTSDIR ] && \
+        [ ! -d $LTPROOT/output ] && \
         {
-           mkdir -p $RESULTSDIR || \
+           echo "INFO: creating $LTPROOT/output directory"
+           mkdir -p $LTPROOT/output || \
            {
-               echo "ERROR: failed to create $RESULTSDIR"
+               echo "ERROR: failed to create $LTPROOT/output"
                exit 1
             }
         }
@@ -476,12 +469,12 @@
     # If we need, create the results directory
     [ "$ALT_DIR_RES" -eq 1 ] && \
     {
-        echo "INFO: creating $RESULTSDIR directory"
-        [ ! -d $RESULTSDIR ] && \
+        echo "INFO: creating $LTPROOT/results directory"
+        [ ! -d $LTPROOT/results ] && \
         {
-           mkdir -p $RESULTSDIR || \
+           mkdir -p $LTPROOT/results || \
            {
-               echo "ERROR: failed to create $RESULTSDIR"
+               echo "ERROR: failed to create $LTPROOT/results"
                exit 1
             }
         }
@@ -679,7 +672,7 @@
     fi
     
     # check for required users and groups
-    ${LTPTOOLS}/IDcheck.sh &>/dev/null || \
+    ${LTPROOT}/IDcheck.sh &>/dev/null || \
     {
         echo "WARNING: required users and groups not present"
         echo "WARNING: some test cases may fail"
@@ -688,7 +681,7 @@
     # display versions of installed software
     [ -z "$QUIET_MODE" ] && \
     { 
-        ${LTPTOOLS}/ver_linux || \
+        ${LTPROOT}/ver_linux || \
         {
             echo "WARNING: unable to display versions of software installed"
             exit 1
@@ -756,7 +749,7 @@
     fi
 
     [ ! -z "$QUIET_MODE" ] && { echo "INFO: Test start time: $(date)" ; }
-    PAN_COMMAND="${LTPTOOLS}/ltp-pan $QUIET_MODE -e -S $INSTANCES $DURATION -a $$ \
+    PAN_COMMAND="${LTPROOT}/bin/ltp-pan $QUIET_MODE -e -S $INSTANCES $DURATION -a $$ \
     -n $$ $PRETTY_PRT -f ${TMP}/alltests $LOGFILE $OUTPUTFILE $FAILCMDFILE"
     echo "COMMAND:    $PAN_COMMAND"
     if [ ! -z "$TAG_RESTRICT_STRING" ] ; then
@@ -795,7 +788,7 @@
 			#Go ahead to Inject Fault & Create required
 			#Command Files for LTP run
 			echo Running tests with Fault Injection Enabled in the Kernel...
-			${LTPTOOLS}/create_kernel_faults_in_loops_and_probability.pl\
+			${LTPROOT}/tools/create_kernel_faults_in_loops_and_probability.pl\
 				${TMP}/alltests $INJECT_FAULT_LOOPS_PER_TEST $INJECT_KERNEL_FAULT_PERCENTAGE > ${TMP}/alltests.tmp
 			cp ${TMP}/alltests.tmp ${TMP}/alltests
 			rm -rf ${TMP}/alltests.tmp
@@ -812,15 +805,15 @@
 			which valgrind || VALGRIND_CHECK_TYPE=XYZ
 			case $VALGRIND_CHECK_TYPE in
 				1)
-				${LTPTOOLS}/create_valgrind_check.pl ${TMP}/alltests 1 > ${TMP}/alltests.tmp
+				${LTPROOT}/tools/create_valgrind_check.pl ${TMP}/alltests 1 > ${TMP}/alltests.tmp
 				cp ${TMP}/alltests.tmp ${TMP}/alltests
 				rm -rf ${TMP}/alltests.tmp;;
 				2)
-				${LTPTOOLS}/create_valgrind_check.pl ${TMP}/alltests 2 > ${TMP}/alltests.tmp
+				${LTPROOT}/tools/create_valgrind_check.pl ${TMP}/alltests 2 > ${TMP}/alltests.tmp
 				cp ${TMP}/alltests.tmp ${TMP}/alltests
 				rm -rf ${TMP}/alltests.tmp;;
 				3)
-				${LTPTOOLS}/create_valgrind_check.pl ${TMP}/alltests 3 > ${TMP}/alltests.tmp
+				${LTPROOT}/tools/create_valgrind_check.pl ${TMP}/alltests 3 > ${TMP}/alltests.tmp
 				cp ${TMP}/alltests.tmp ${TMP}/alltests
 				rm -rf ${TMP}/alltests.tmp;;
 				*) echo "Invalid Memory Check Type, or, Valgrind is not available";;
@@ -830,7 +823,7 @@
 
     # Some tests need to run inside the "bin" directory.
     cd "${LTPROOT}/testcases/bin"
-    ${LTPTOOLS}/pan/ltp-pan $QUIET_MODE -e -S $INSTANCES $DURATION -a $$ -n $$ $PRETTY_PRT -f ${TMP}/alltests $LOGFILE $OUTPUTFILE $FAILCMDFILE
+    "${LTPROOT}/bin/ltp-pan" $QUIET_MODE -e -S $INSTANCES $DURATION -a $$ -n $$ $PRETTY_PRT -f ${TMP}/alltests $LOGFILE $OUTPUTFILE $FAILCMDFILE
      
     if [ $? -eq 0 ]; then
       echo "INFO: ltp-pan reported all tests PASS"
@@ -841,6 +834,7 @@
       VALUE=1
       export LTP_EXIT_VALUE=1;
     fi
+    cd ..
     echo "LTP Version: $version_date"
 
     if [ "$ALT_HTML_OUT" -eq 1 ] ; then        #User wants the HTML output to be created, it then needs to be generated
@@ -848,8 +842,8 @@
        export TEST_START_TIME=$test_start_time
        export TEST_END_TIME=$(date)
        OUTPUT_DIRECTORY=`echo $OUTPUTFILE | cut -c4-`
-       LOGS_DIRECTORY="$RESULTSDIR"
-       export TEST_OUTPUT_DIRECTORY="$RESULTSDIR"
+       LOGS_DIRECTORY="$LTPROOT/results"
+       export TEST_OUTPUT_DIRECTORY="$LTPROOT/output"
        export TEST_LOGS_DIRECTORY=$LOGS_DIRECTORY
        echo "Generating HTML Output.....!!"
        ( perl $LTPROOT/tools/genhtml.pl $LTPROOT/tools/html_report_header.txt test_start test_end test_output execution_status $OUTPUT_DIRECTORY  > $HTMLFILE; )   
@@ -865,37 +859,37 @@
        else
            TAR_FILE_NAME=LTP_RUN_$version_date$DEFAULT_FILE_NAME_GENERATION_TIME.tar
            if [ "$HTMLFILE_NAME" ] ; then                          ## HTML file Exists
-              if [ "$ALT_HTML_OUT" -ne 1 ] ; then                  ## The HTML file path is absolute and not $RESULTSDIR
-                 mkdir -p $RESULTSDIR                          ## We need to create this Directory
-                 cp $HTMLFILE_NAME $RESULTSDIR/
+              if [ "$ALT_HTML_OUT" -ne 1 ] ; then                  ## The HTML file path is absolute and not $LTPROOT/output
+                 mkdir -p $LTPROOT/output                          ## We need to create this Directory
+                 cp $HTMLFILE_NAME $LTPROOT/output/
               fi
            fi
            if [ "$OUTPUTFILE_NAME" ] ; then                        ## Output file exists
-              if [ "$ALT_DIR_OUT" -ne 1 ] ; then                   ## The Output file path is absolute and not $RESULTSDIR
-                 mkdir -p $RESULTSDIR                          ## We need to create this Directory
-                 cp $OUTPUTFILE_NAME $RESULTSDIR/
+              if [ "$ALT_DIR_OUT" -ne 1 ] ; then                   ## The Output file path is absolute and not $LTPROOT/output
+                 mkdir -p $LTPROOT/output                          ## We need to create this Directory
+                 cp $OUTPUTFILE_NAME $LTPROOT/output/
               fi
            fi
            if [ "$LOGFILE_NAME" ] ; then                           ## Log file exists
-              if [ "$ALT_DIR_RES" -ne 1 ] ; then                   ## The Log file path is absolute and not $RESULTSDIR
-                  mkdir -p $RESULTSDIR                             ## We need to create this Directory
-                 cp $LOGFILE_NAME $RESULTSDIR/
+              if [ "$ALT_DIR_RES" -ne 1 ] ; then                   ## The Log file path is absolute and not $LTPROOT/results
+                 mkdir -p $LTPROOT/results                         ## We need to create this Directory
+                 cp $LOGFILE_NAME $LTPROOT/results/
               fi
            fi
-           if [ -d $RESULTSDIR ] ; then
-              tar -cf  ./$TAR_FILE_NAME $RESULTSDIR
+           if [ -d $LTPROOT/output ] ; then
+              tar -cf  ./$TAR_FILE_NAME $LTPROOT/output
               if [ $? -eq 0 ]; then
-                 echo "Created TAR File: ./$TAR_FILE_NAME successfully, added $RESULTSDIR"
+                 echo "Created TAR File: ./$TAR_FILE_NAME successfully, added $LTPROOT/output"
               else
-                 echo "Cannot Create TAR File: ./$TAR_FILE_NAME for adding $RESULTSDIR"
+                 echo "Cannot Create TAR File: ./$TAR_FILE_NAME for adding $LTPROOT/output"
               fi
            fi
-           if [ -d $RESULTSDIR ] ; then
-              tar -uf ./$TAR_FILE_NAME $RESULTSDIR
+           if [ -d $LTPROOT/results ] ; then
+              tar -uf ./$TAR_FILE_NAME $LTPROOT/results
               if [ $? -eq 0 ]; then
-                 echo "Updated TAR File: ./$TAR_FILE_NAME successfully, added $RESULTSDIR"
+                 echo "Updated TAR File: ./$TAR_FILE_NAME successfully, added $LTPROOT/results"
               else
-                 echo "Cannot Update TAR File: ./$TAR_FILE_NAME for adding $RESULTSDIR"
+                 echo "Cannot Update TAR File: ./$TAR_FILE_NAME for adding $LTPROOT/results"
               fi
            fi
            if [ -e $LTPROOT/nohup.out ] ; then                     ## If User would have Chosen nohup to do ltprun
@@ -944,8 +938,6 @@
        ###############################################################"
         
             Done executing testcases."
-            log result(s) is in $RESULTSDIR directory"
-            output/failed result(s) in $RESULTSDIR directory [If you did not provide Absolute Path]
             LTP Version:  $version_date
        ###############################################################"
        

#
# remove ucf related file setup
#
# Skerlet <skerlet@swc.toshiba.co.jp>
#
--- a/debian/update-grub	2014-04-10 20:05:54.265328944 +0900
+++ b/debian/update-grub	2014-04-10 20:12:38.358313065 +0900
@@ -352,9 +352,6 @@
 menu_file_basename=menu.lst
 menu_file=$grub_dir/$menu_file_basename
 
-# Full path to the menu.lst fragment used for ucf management
-ucf_menu_file=/var/run/grub/$menu_file_basename
-
 # Full path to the default file
 default_file_basename=default
 default_file=$grub_dir/$default_file_basename
@@ -1031,36 +1028,6 @@
 	echo $end >> $buffer
 }
 
-ucf_update_kernels() {
-	local target; target="$1"
-	local buffer; buffer="$2"
-
-	sed -ni -e"/$endopt/,/$end/p" "$buffer"
-
-	if [ "x$initialconfig" = "x" ]; then
-		sed -n -e"/$endopt/,/$end/p" < $menu > $ucf_menu_file
-	else
-		cat $buffer > $ucf_menu_file
-	fi
-
-	db_x_loadtemplatefile /var/lib/dpkg/info/grub.templates grub
-
-	ucf --debconf-ok \
-		--debconf-template grub/update_grub_changeprompt_threeway \
-		--three-way "$buffer" $ucf_menu_file
-	rm "$buffer"
-
-	# now re-merge the ucf results with the target file
-	sed -i -e "/^$endopt/,/^$end/ {
-		/^$endopt/r $ucf_menu_file
-		d
-	}
-	" $target
-
-	rm -f $ucf_menu_file ${ucf_menu_file}.ucf-old
-}
-
-
 echo -n "Testing for an existing GRUB $menu_file_basename file ... " >&2
 
 # Test if our menu file exists
@@ -1317,68 +1284,6 @@
 	kernel_dir=
 fi
 
-
-# We need a static path to use for the ucf registration; since we're not
-# using the full menu.lst file (maybe we should, just copying it around?
-# C.f. discussion with Manoj), create a directory in a fixed location
-# even though we're not treating the file in that location as
-# persistent.
-mkdir -p /var/run/grub
-
-# The first time ucf sees the file, we can only assume any difference
-# between the magic comments and the kernel options is a result of local
-# mods, so this will result in a ucf prompt for anyone whose first
-# invocation of update-grub is as a result of updating the magic comments.
-if ! ucfq grub | grep -q $ucf_menu_file; then
-	otherbuffer=$(tempfile)
-	cat $buffer > $otherbuffer
-
-	sortedKernels=`sed -n -e "
-	/$endopt/,/$end/ {
-		s/^kernel[[:space:]]\+\([^[:space:]]\+\).*/\1/p
-	}" < $menu | grep -vE "memtest86|$grub2name|xen" | uniq`
-	xen0Kernels=`sed -n -e "
-	/$endopt/,/$end/ {
-		s/^module[[:space:]]\+\([^[:space:]]*vmlinuz[^[:space:]]\+\).*/\1/p
-	}" < $menu | uniq`
-
-	savebuffer="$buffer"
-	buffer="$otherbuffer"
-	savetitle="$title"
-	title="$(sed -n -e "/$endopt/,/$end/ {
-		s/^title[[:space:]]\+\(.*\),.*/\1/p
-	}" < $menu | head -n 1)"
-	if [ -z "$title" ]; then
-		title="$savetitle"
-	fi
-
-	# Hack: the kernel list output in Ubuntu 6.06 was different than
-	# in the current version, so to support smooth upgrades we need to
-	# properly detect a config generated by this old version of
-	# update-grub and mimic it for the initial ucf registration
-	dapper_upgrade=`sed -n -e "
-	/$endopt/,/$end/ {
-		/^boot/p
-	}" < $menu`
-	save_savedefault="$savedefault"
-	if [ -n "$dapper_upgrade" ]; then
-		savedefault=true
-	fi
-
-	output_kernel_list
-
-	savedefault="$save_savedefault"
-	dapper_upgrade=""
-	buffer="$savebuffer"
-	title="$savetitle"
-
-	ucf_update_kernels "$menu" "$otherbuffer"
-
-	# all done, now register it
-	ucfr grub $ucf_menu_file
-fi
-
-
 xen0Kernels=""
 # First kernels with xen0 support.
 for ver in `grep -l CONFIG_XEN=y /boot/config* | sed -e s%/boot/config-%%`; do
@@ -1498,8 +1403,6 @@
 otherbuffer=$(tempfile)
 cat $buffer > $otherbuffer
 
-ucf_update_kernels "$buffer" "$otherbuffer"
-
 echo -n "Updating $menu ... " >&2
 # Insert the new options into the menu
 if ! grep -q "^$start" $menu ; then

#
# debian-squeeze
#
# this replaces non-existing cross pwconv
#
# enable shadowing by creating /etc/shadow and modify /etc/passwd
# after /etc/passwd generated by setup_passwd
#

inherit passwd

PASSWD_FILE ?= "${sysconfdir}/passwd"
SHADOW_FILE ?= "${sysconfdir}/shadow"

# default values for shadow
SHADOW_LAST_CHANGED ?= ""
SHADOW_MIN_AGE ?= ""
SHADOW_MAX_AGE ?= ""
SHADOW_WARN_PERIOD ?= ""
SHADOW_INACTIVE_PERIOD ?= ""
SHADOW_EXPIRE_DATE ?= ""
SHADOW_RESERVED ?= ""

setup_shadow() {
	if [ ! -e ${IMAGE_ROOTFS}/${PASSWD_FILE} ]; then
		echo "setup_shadow: ERROR: ${IMAGE_ROOTFS}/${PASSWD_FILE} not found"
		exit 1
	fi
	if [ -e ${IMAGE_ROOTFS}/${SHADOW_FILE} ]; then
		echo "setup_shadow: ERROR: somebody already created ${IMAGE_ROOTFS}/${SHADOW_FILE} before setup_shadow"
		exit 1
	fi

	while read line; do
		user=$(echo $line | cut -d ':' -f 1)
		passwd=$(echo $line | cut -d ':' -f 2)
		echo "setup_shadow: creating shadow entry for $user to ${IMAGE_ROOTFS}/${SHADOW_FILE}"
		echo "\
$user:\
$passwd:\
${SHADOW_LAST_CHANGED}:\
${SHADOW_MIN_AGE}:\
${SHADOW_MAX_AGE}:\
${SHADOW_WARN_PERIOD}:\
${SHADOW_INACTIVE_PERIOD}:\
${SHADOW_EXPIRE_DATE}:\
${SHADOW_RESERVED}" >> ${IMAGE_ROOTFS}/${SHADOW_FILE}

		echo "setup_shadow: replacing password of $user in ${IMAGE_ROOTFS}/${PASSWD_FILE} by 'x'"
		sed -i "s@^$user*:[^:]*:@$user:x:@" ${IMAGE_ROOTFS}/${PASSWD_FILE}
	done < ${IMAGE_ROOTFS}/${PASSWD_FILE}

	chmod 0440 ${IMAGE_ROOTFS}/${SHADOW_FILE}
	echo "setup_shadow: done"
}

ROOTFS_POSTPROCESS_COMMAND += "setup_shadow ; "
